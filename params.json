{"name":"ngTailor","tagline":" Offers you a tailor-made workflow for your Angularjs Web App.","body":"[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/) - [Send me your feedbacks](https://docs.google.com/forms/d/1cBq4klFWO7gh-HdqvRjiHGyIqoU8eaXC5k290M5DLKQ/edit)\r\n\r\n## Why is ngTailor interesting ?\r\nYou love Angularjs, Grunt and Bower ? You might be interested by ngTailor.\r\nngTailor scaffolds out a new Angularjs application, writing your Grunt and Bower configurations and prepare for you revelant Grunt tasks you needs.\r\n\r\n## Features\r\n* Let you choose the Angularjs modules you need.\r\n* Your assets dependencies are managed by [bower](http://www.bower.io)\r\n* Run [Brian Ford](https://twitter.com/briantford) [ng-min](https://github.com/btford/ngmin) before your minification\r\n* Replace your scripts and stylesheets declaration with the minified version when packaging your app for production thanks to [http://yeoman.io/](Yeoman) [grunt-usemin](https://github.com/yeoman/grunt-usemin)\r\n* Watch for you assets changes and automatically run `jshint` or `csslint` on your code and even unit tests.\r\n* Livereload is out of the box. No F5 anymore\r\n* Automatically output a hash in your assets file name for caching purpose.\r\n* Set up unit and e2e tests with Karma and Jasmine and generate test coverage report.\r\n* Automatically run `npm install && bower install && grunt bower-install` to download your project dependencies and import them in your index.html\r\n* Compile you SASS files\r\n* Visualize Javascript source complexity with [plato](https://github.com/es-analysis/plato). ([See an example of a plato report](http://es-analysis.github.io/plato/examples/grunt/))\r\n* Optimize your images (png, jpeg, gif)\r\n* Keep multiple browsers devices in sync using [grunt-browser-sync](https://github.com/shakyShane/browser-sync)\r\n\r\n## ngTailor vs Yeoman ?\r\nBoth aim to provide you a collection of tools and best practices to improve your productivity as a modern front end developer.\r\nYeoman is great but in my opinion, its generator-angular provides a bloated solution to manage and build angularjs applications.\r\nngTailor let you choose in a much more fine-grained way, each tools or components you want to be included in your application and workflow.\r\nNote that ngTailor do not provide generator for directives, controllers etc like yeoman and generator-angular do.\r\n\r\n## Prerequisites\r\n1. Install [node and npm](http://www.nodejs.org)\r\n2. Install **Grunt** running `npm install -g grunt-cli` \r\n3. Install **Bower** running `npm install -g bower`\r\n4. Install **grunt-init** running `npm install -g grunt-init`\r\n5. Install this template in your `~/.grunt-init/` directory (`%USERPROFILE%\\.grunt-init\\` on Windows) \r\n   by running `git clone https://github.com/lauterry/ngTailor.git ~/.grunt-init/angular`\r\n\r\n## Generate your Angular project\r\n1. Create a new folder for your project\r\n2. Open a terminal and run `grunt-init angular` in your project folder\r\n3. Choose between \"Fast mode\" or \"Advanced mode\":\r\n  * \"Fast mode\" : Generate an Angularjs project with the minimal options.\r\n  * \"Advanced mode\" : Let you customize your scaffolding and add more features. Just answer to the prompted questions.\r\n4. ngTaylor will generate your Angularjs application and download all the dependencies by running ```npm install && bower install```\r\nTo check that everything is ok :\r\n5. Run `grunt dev` to serve your static assets at [http://localhost:8888](http://localhost:8888)\r\n6. Your should see \"Yeahhh ! You're ready !\" displayed in your browser\r\n7. Voil√† ! Your Angular project is ready ! Next step is to discover the available Grunt tasks.\r\n\r\n## Developement\r\n* Run `grunt dev` to start a static web server and open your browser at [http://localhost:8888](http://localhost:8888).\r\n* Livereload will be automatically active meaning that you can see your modification on the browser without hitting F5.\r\n* `jshint` and/or `csslint` will be run on your files when they change.\r\n* If you choose to have unit tests, they will be run as your test and source files change.\r\n\r\n## Package for Production\r\n* Run `grunt package` to package your static assets for production.\r\n* Your package will be generated in a `dist` folder and your javascripts and stylesheets will be concatenated, minified and versionned.\r\n* `grunt` : launch `grunt package`, run unit tests and e2e test and generate complexity report. Use this task for continuous integration.\r\n\r\n## Available Grunt tasks\r\n* `grunt test:unit` : run karma unit tests and show test coverage in console.\r\n* `grunt test:e2e` : run karma e2e tests\r\n* `grunt report` : open complexity report in your browser\r\n\r\n## Update ngTailor\r\n* `rm -rf ~/.grunt-init/angular`\r\n* `git clone https://github.com/lauterry/ngTailor.git ~/.grunt-init/angular`","google":"UA-46551712-1","note":"Don't delete this file! It's used internally to help with page regeneration."}